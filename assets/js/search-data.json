{"0": {
    "doc": "About",
    "title": "Key Members",
    "content": "Meet the Team! . | Prohurtz - Initiator / Moderator / Documentor / Lead Software Developer . | Summer - Machine Learning Engineer / Data Scientist / Developer . | lorow - Lead Firmware Developer / Developer . | DaOfficialWizard - Firmware Developer / Documentation Manager / Developer . | . ",
    "url": "https://redhawk989.github.io/EyeTrackVR/about/#key-members",
    "relUrl": "/about/#key-members"
  },"1": {
    "doc": "About",
    "title": "Contributors",
    "content": "Individuals . | qdot - Created the initial version of the GUI App . | dfgHiatus - Created NeosVR mod . | . ",
    "url": "https://redhawk989.github.io/EyeTrackVR/about/#contributors",
    "relUrl": "/about/#contributors"
  },"2": {
    "doc": "About",
    "title": "Philosophy",
    "content": "The How to Build section of this website includes some of our teams own notes (not all of them are polished) that we disclose for other people to use. There, we hope you may find something useful to you. We advocate the Open Source model. This is why we strive to make our work open to other people for consultation, replication and reuse. Credits . | SlimeVR - Thank you to the SlimeVR Team for their design inspirations as we began building out the documentation. | . ",
    "url": "https://redhawk989.github.io/EyeTrackVR/about/#philosophy",
    "relUrl": "/about/#philosophy"
  },"3": {
    "doc": "About",
    "title": "About",
    "content": "EyeTrackVR developers are a group of people who are passionate about the field of augmented and virtual reality. ",
    "url": "https://redhawk989.github.io/EyeTrackVR/about/",
    "relUrl": "/about/"
  },"4": {
    "doc": "How to build",
    "title": "How to build",
    "content": "So, you want eyetracking in vr, but don’t want to buy it😷? . Well, you’ve come to the right place then‼ . The following section of documentation will walk you through exactly how to build your very own eyetracking rig. This, could be your eye. Who knows .... ",
    "url": "https://redhawk989.github.io/EyeTrackVR/how_to_build",
    "relUrl": "/how_to_build"
  },"5": {
    "doc": "Building the app from source",
    "title": "This guide will show how to build the app from source",
    "content": ". Note: This is NOT a required step, you do not need to build the app from source. ",
    "url": "https://redhawk989.github.io/EyeTrackVR/building-the-app/#this-guide-will-show-how-to-build-the-app-from-source",
    "relUrl": "/building-the-app/#this-guide-will-show-how-to-build-the-app-from-source"
  },"6": {
    "doc": "Building the app from source",
    "title": "Requirements:",
    "content": ". | Python 3.6.8 | Pyinstaller | Windows PC | . ",
    "url": "https://redhawk989.github.io/EyeTrackVR/building-the-app/#requirements",
    "relUrl": "/building-the-app/#requirements"
  },"7": {
    "doc": "Building the app from source",
    "title": "Install the required Python modules.",
    "content": "After cloning the project open a command prompt in the eyetrack app folder and run the command: pip install -r requirements.txt . If you have multiple python versions installed on your machine, run the command: py -3.6 -m pip install -r requirements.txt . This should install all of the required modules. ",
    "url": "https://redhawk989.github.io/EyeTrackVR/building-the-app/#install-the-required-python-modules",
    "relUrl": "/building-the-app/#install-the-required-python-modules"
  },"8": {
    "doc": "Building the app from source",
    "title": "Build the app.",
    "content": "Now, you should be ready to build the app. With a command promt open in the EyeTrackApp folder, run the command pyinstaller eyetrackapp.spec . Give it time to build the app. Once done the app should be under dist/eyetrackapp . ",
    "url": "https://redhawk989.github.io/EyeTrackVR/building-the-app/#build-the-app",
    "relUrl": "/building-the-app/#build-the-app"
  },"9": {
    "doc": "Building the app from source",
    "title": "Optional steps:",
    "content": ". | Move the Images folder from the source folder into the folder with the built .exe in it . | this will let it have an icon in the app and taskbar. | . | Use a program like Resource Hacker to replace the .exe icon with the correct logo. | Here is a tutorial | . | . ",
    "url": "https://redhawk989.github.io/EyeTrackVR/building-the-app/#optional-steps",
    "relUrl": "/building-the-app/#optional-steps"
  },"10": {
    "doc": "Building the app from source",
    "title": "Building the app from source",
    "content": " ",
    "url": "https://redhawk989.github.io/EyeTrackVR/building-the-app/",
    "relUrl": "/building-the-app/"
  },"11": {
    "doc": "Web-Forum",
    "title": "Web-Forum",
    "content": "Comments . Load Comments . Load Older Comments There are currently no comments on this article, be the first to add one below . Add a Comment . Note that we may remove comments for any reason, so try to be civil. If you are looking for a response to your comment, either leave your email address or check back on this page periodically. | . | | Post | . This site is protected by reCAPTCHA and the Google Privacy Policy and Terms of Service apply. ",
    "url": "https://redhawk989.github.io/EyeTrackVR/_pages/Comments/",
    "relUrl": "/_pages/Comments/"
  },"12": {
    "doc": "Configuring firmware",
    "title": "Once you have opened the project, you should see something on the left side like this.",
    "content": " ",
    "url": "https://redhawk989.github.io/EyeTrackVR/configure-firmware/#once-you-have-opened-the-project-you-should-see-something-on-the-left-side-like-this",
    "relUrl": "/configure-firmware/#once-you-have-opened-the-project-you-should-see-something-on-the-left-side-like-this"
  },"13": {
    "doc": "Configuring firmware",
    "title": "Open the platformio.ini file.",
    "content": "On lines 17 and 18 replace the placeholder text with your correct SSID (WiFi access point name), and password respectfully. Note: Make sure your wifi router has a 2.4 GHz band. While most do, this is not always the case. Setting each band, (5GHz, and 2.4GHz) to different SSIDs is recommended though not required. Double check that you have correctly entered your WiFi credentials and that said wifi network has a 2.4GHz band. ",
    "url": "https://redhawk989.github.io/EyeTrackVR/configure-firmware/#open-the-platformioini-file",
    "relUrl": "/configure-firmware/#open-the-platformioini-file"
  },"14": {
    "doc": "Configuring firmware",
    "title": "Now, move on to uploading the firmware",
    "content": " ",
    "url": "https://redhawk989.github.io/EyeTrackVR/configure-firmware/#now-move-on-to-uploading-the-firmware",
    "relUrl": "/configure-firmware/#now-move-on-to-uploading-the-firmware"
  },"15": {
    "doc": "Configuring firmware",
    "title": "Configuring firmware",
    "content": " ",
    "url": "https://redhawk989.github.io/EyeTrackVR/configure-firmware/",
    "relUrl": "/configure-firmware/"
  },"16": {
    "doc": "Socials",
    "title": "Contact Us",
    "content": "Please join our Discord for updates and any questions. ",
    "url": "https://redhawk989.github.io/EyeTrackVR/contact/#contact-us",
    "relUrl": "/contact/#contact-us"
  },"17": {
    "doc": "Socials",
    "title": "Socials",
    "content": " ",
    "url": "https://redhawk989.github.io/EyeTrackVR/contact/",
    "relUrl": "/contact/"
  },"18": {
    "doc": "Development Roadmap",
    "title": "EyeTrackVR Development Roadmap",
    "content": "This will contain a list of features that are in progress, completed, and planned. ",
    "url": "https://redhawk989.github.io/EyeTrackVR/dev-roadmap/#eyetrackvr-development-roadmap",
    "relUrl": "/dev-roadmap/#eyetrackvr-development-roadmap"
  },"19": {
    "doc": "Development Roadmap",
    "title": "Completed",
    "content": ". | Tracking algorithm | Calibration | GUI | PCB Design for IR emitters | Dual eye support | Firmware | Better documentation over things (setup, wiring etc.) | . ",
    "url": "https://redhawk989.github.io/EyeTrackVR/dev-roadmap/#completed",
    "relUrl": "/dev-roadmap/#completed"
  },"20": {
    "doc": "Development Roadmap",
    "title": "In Progress",
    "content": ". | Variable eye openness tracking | Release of V1 to the masses | Auto ROI cropping | Auto threshold’s | Setup WiFi credentials for ESPs through non-firmware means | Setup flashing of ESPs through anything other than VSC | . ",
    "url": "https://redhawk989.github.io/EyeTrackVR/dev-roadmap/#in-progress",
    "relUrl": "/dev-roadmap/#in-progress"
  },"21": {
    "doc": "Development Roadmap",
    "title": "Planned",
    "content": ". | Support for implementation with VRCFT (binary parameters etc.) | Dynamic foveated rendering via OpenXR (not a guarantee) | . ",
    "url": "https://redhawk989.github.io/EyeTrackVR/dev-roadmap/#planned",
    "relUrl": "/dev-roadmap/#planned"
  },"22": {
    "doc": "Development Roadmap",
    "title": "Development Roadmap",
    "content": " ",
    "url": "https://redhawk989.github.io/EyeTrackVR/dev-roadmap/",
    "relUrl": "/dev-roadmap/"
  },"23": {
    "doc": "Installing and setting up the ETVR App",
    "title": "How to install, run and adjust the EyeTrackVR app.",
    "content": "Step 1: Download the EyeTrackVR Installer and install the EyeTrackVR app. Go to the latest GitHub release here and download the .zip . Extract the zip file and then run the .exe as administrator. You will be greeted with a window that looks like this: . By default, it will install to C:\\Program Files\\EyeTrackVR and create a shortcut on your desktop. Pressing the Change Install Path button will open up a window where you can navigate to an alternate install path. Press Install to install the app. Note: The installer can also be used to update the app, just go through the install process again. If it has been successfully installed it should change to look like this: . ",
    "url": "https://redhawk989.github.io/EyeTrackVR/install-and-set-up-the-app/#how-to-install-run-and-adjust-the-eyetrackvr-app",
    "relUrl": "/install-and-set-up-the-app/#how-to-install-run-and-adjust-the-eyetrackvr-app"
  },"24": {
    "doc": "Installing and setting up the ETVR App",
    "title": "Step 2: Run the EyeTrackVR app.",
    "content": "If the Create Desktop Shortcut option was checked you should see an icon on your desktop, double click it to run. You then should be greeted with a GUI that looks like this: . ",
    "url": "https://redhawk989.github.io/EyeTrackVR/install-and-set-up-the-app/#step-2-run-the-eyetrackvr-app",
    "relUrl": "/install-and-set-up-the-app/#step-2-run-the-eyetrackvr-app"
  },"25": {
    "doc": "Installing and setting up the ETVR App",
    "title": "Step 3: Getting familiar with settings and terminology.",
    "content": "Let’s go over some basic terminology you will find in the app. Starting from the top: . Right eye: . Shows the right eye feed and settings only. Left eye: . Shows the left eye feed and settings only. Both eyes: . Shows both eyes’ feed and settings. Camera Address: . This is where you enter the IP address of your camera. Alternatively, it can be used to put the cam number for wired cameras or pass in a video file. Tracking Mode: . This changes the GUI to the tracking mode where it outputs values. Cropping Mode: . This is where you will crop out your eye. Threshold: . This is used to cut out things that aren’t dark like your pupil. Rotation: . For our method to work best, you want your eye to be level. Use this slider to adjust it to where that is the case. Restart Calibrationn: . This will start a calibration mode for your eye where you look to all extremes. Recenter Eye: . This will recenter your eye to whatever point you are looking at. ",
    "url": "https://redhawk989.github.io/EyeTrackVR/install-and-set-up-the-app/#step-3-getting-familiar-with-settings-and-terminology",
    "relUrl": "/install-and-set-up-the-app/#step-3-getting-familiar-with-settings-and-terminology"
  },"26": {
    "doc": "Installing and setting up the ETVR App",
    "title": "Step 4: Adding your cameras to the software and configuring them.",
    "content": "Power your ESPs and find what the IP address is for your right eye. This can be done by opening both Cameras in a browser and then holding your finger over your right eye camera. Copy that IP address and then close the browser tab with it open. Enter that IP address into the app’s Camera Address field and press the Save and Restart Tracking button. Don’t see your camera feed? That’s because we haven’t set an ROI. See the Awating Eye Cropping Settings text? Now press the Cropping Mode button. You should see a feed of your camera. Put your headset on and use an application to see your desktop. (Virtual desktop, SteamVR desktop, etc.) . You should see something like this: . :O It's my eye! Now, Draw a rectangle that selects your eye. A good example of an ROI . Head back over to the Tracking mode. We will now adjust our rotation by moving the Rotation slider. From this: . It's crooked! To this: . Much better Now we will adjust our threshold. Continuing with your headset on, move the slider all the way up. start slowly backing it off until mainly only your pupil is being visualized in the threshold viewer. Example of a threshold being too low: . Example of too high of a threshold: . Example of a good threshold: . Repeat everything in this step for your left eye. ",
    "url": "https://redhawk989.github.io/EyeTrackVR/install-and-set-up-the-app/#step-4-adding-your-cameras-to-the-software-and-configuring-them",
    "relUrl": "/install-and-set-up-the-app/#step-4-adding-your-cameras-to-the-software-and-configuring-them"
  },"27": {
    "doc": "Installing and setting up the ETVR App",
    "title": "Step 5: Calibrating your eyes.",
    "content": "Once your eye is trackable by the software we need to calibrate it. Press the Restart Calibration button and look around. The important part is that you look to all extremes, all the way up, left, etc. Once you have done so, wait for the Mode to say Tracking . The next step is to center your eye. Look straight forward and press the Recenter Eye button. Your eye is now fully calibrated. Repeat for your other eye. Note: To best center both eyes, look at one spot and hit the 'Recenter Eye' button for each eye without moving your eyes. ",
    "url": "https://redhawk989.github.io/EyeTrackVR/install-and-set-up-the-app/#step-5-calibrating-your-eyes",
    "relUrl": "/install-and-set-up-the-app/#step-5-calibrating-your-eyes"
  },"28": {
    "doc": "Installing and setting up the ETVR App",
    "title": "See anything outdated on this guide? Let me know! Prohurtz#0001",
    "content": " ",
    "url": "https://redhawk989.github.io/EyeTrackVR/install-and-set-up-the-app/#see-anything-outdated-on-this-guide-let-me-know-prohurtz0001",
    "relUrl": "/install-and-set-up-the-app/#see-anything-outdated-on-this-guide-let-me-know-prohurtz0001"
  },"29": {
    "doc": "Installing and setting up the ETVR App",
    "title": "Installing and setting up the ETVR App",
    "content": " ",
    "url": "https://redhawk989.github.io/EyeTrackVR/install-and-set-up-the-app/",
    "relUrl": "/install-and-set-up-the-app/"
  },"30": {
    "doc": "FAQ",
    "title": "\n                    What is the goal of this project?\n                ",
    "content": "To provide an open source, affordable VR eyetracker for VR Chat and more. ",
    "url": "https://redhawk989.github.io/EyeTrackVR/faq/",
    "relUrl": "/faq/"
  },"31": {
    "doc": "FAQ",
    "title": "\n                    What headsets will be supported?\n                ",
    "content": "Any headset that the hardware can fit in with community mounts or a mount you design. ",
    "url": "https://redhawk989.github.io/EyeTrackVR/faq/",
    "relUrl": "/faq/"
  },"32": {
    "doc": "FAQ",
    "title": "\n                    How will this work?\n                ",
    "content": "Currently, a camera is mounted inside the headset for each eye. The camera streams through wifi to a PC client which processes and sends eye tracking data to VR Chat. ",
    "url": "https://redhawk989.github.io/EyeTrackVR/faq/",
    "relUrl": "/faq/"
  },"33": {
    "doc": "FAQ",
    "title": "\n                    What features will be supported?\n                ",
    "content": "The goal is eye tracking with eye openness, and some form of pupil dilation. A far away aspiration of this project is some form of weak foveated rendering because it's cool and any small performance increase in VR is welcome. ",
    "url": "https://redhawk989.github.io/EyeTrackVR/faq/",
    "relUrl": "/faq/"
  },"34": {
    "doc": "FAQ",
    "title": "\n                    When will this be completed?\n                ",
    "content": "When it's done 😉 I have a semi busy life so development may slow and speed up inconsistently. I have a goal to be done with all base features in June. ",
    "url": "https://redhawk989.github.io/EyeTrackVR/faq/",
    "relUrl": "/faq/"
  },"35": {
    "doc": "FAQ",
    "title": "\n                    Will IR damage my eyes?\n                ",
    "content": "This project has safety in mind. If you do all of the safety measures that we put into place and visually test the amount of IR light you will be fine. Please note we have not finished development of all safety stuff so be careful, here is a pdf with safety information . ",
    "url": "https://redhawk989.github.io/EyeTrackVR/faq/",
    "relUrl": "/faq/"
  },"36": {
    "doc": "FAQ",
    "title": "\n                    How expensive will this be?\n                ",
    "content": "My goal is to keep it as cheap as possible with around $75 as the absolute max, with current projections being around $25-40 . ",
    "url": "https://redhawk989.github.io/EyeTrackVR/faq/",
    "relUrl": "/faq/"
  },"37": {
    "doc": "FAQ",
    "title": "\n                    How do I set up my avatar?\n                ",
    "content": "Check out the VR Chat face tracking wiki on our github. Keep in mind that we currently only support float parameters. ",
    "url": "https://redhawk989.github.io/EyeTrackVR/faq/",
    "relUrl": "/faq/"
  },"38": {
    "doc": "FAQ",
    "title": "\n                    What hardware does this use?/How do I build?\n                ",
    "content": "Testing is still being done to validate our current hardware choice, no hardware has been fully confirmed therefore I cannot recommend you buy parts and assemble one yourself unless you are good with losing money and are going to be actively contributing to the project. This stands true still as of 5/3. ",
    "url": "https://redhawk989.github.io/EyeTrackVR/faq/",
    "relUrl": "/faq/"
  },"39": {
    "doc": "FAQ",
    "title": "\n                    Where's the docs?\n                ",
    "content": "All of our documentation is located on this website, all future documentation will be found here as well. ",
    "url": "https://redhawk989.github.io/EyeTrackVR/faq/",
    "relUrl": "/faq/"
  },"40": {
    "doc": "FAQ",
    "title": "FAQ",
    "content": ". ",
    "url": "https://redhawk989.github.io/EyeTrackVR/faq/",
    "relUrl": "/faq/"
  },"41": {
    "doc": "Firmware Guide",
    "title": "What is this?",
    "content": "Firmware is the second part of the equation to get your trackers going. It lives on the ESP32 chip, and is responsible for streaming video data from the tracker. ",
    "url": "https://redhawk989.github.io/EyeTrackVR/setting-up-firmware/#what-is-this",
    "relUrl": "/setting-up-firmware/#what-is-this"
  },"42": {
    "doc": "Firmware Guide",
    "title": "What should I download and where?",
    "content": "Current testing has been with loucass003's firmware found here. It’s tried and working although it’s a bit more complicated to setup and does not fully fulfil our needs. Download and install this one, for now. We’re working on our own solution called OpenIris, found here. So far we have: . Working right now . | Basic stream in 60FPS at 248x248px in MJPEG in greyscale | A basic HTTP server with API, which allows for better control of the stream and the camera settings | Health checks - we know when something goes wrong and we can react to it | OTA updates - we can update the firmware on the fly | ROI selection for eye area - this feature hasn’t been tested all that much yet. | MDNS - so that the server itself will detect and communicate with the tracker without you doing anything. | . In development are . | Persistent storage for storing your settings on the device itself, this will also allow for saving multiple wifi networks! | LED status patterns - so that you know what’s going on without plugging the tracker in to the PC | FEC encoding with packet injection for even faster streams! | Better OTA so that updates can be downloaded from github and pushed by the server to the tracker | CI/CD with github actions - so we can more seamlessly update the trackers | . ",
    "url": "https://redhawk989.github.io/EyeTrackVR/setting-up-firmware/#what-should-i-download-and-where",
    "relUrl": "/setting-up-firmware/#what-should-i-download-and-where"
  },"43": {
    "doc": "Firmware Guide",
    "title": "How do download this?",
    "content": "Follow the steps described here . ",
    "url": "https://redhawk989.github.io/EyeTrackVR/setting-up-firmware/#how-do-download-this",
    "relUrl": "/setting-up-firmware/#how-do-download-this"
  },"44": {
    "doc": "Firmware Guide",
    "title": "Firmware Guide",
    "content": " ",
    "url": "https://redhawk989.github.io/EyeTrackVR/setting-up-firmware/",
    "relUrl": "/setting-up-firmware/"
  },"45": {
    "doc": "Full Build Guide",
    "title": "This page will contain a step-by-step assembly guide.",
    "content": ": . Step 1 Make sure you have read the Things to know before you start guide . Step 2: Order all the parts listed on our Parts list . Step 3: Wait for things to arrive. Step 4: Gather up all of your hardware. Step 5: Attach cameras to ESPs. Step 6: Connect ESP to the programmer to flash. Step 7: Configure Visual Studio Code and prepare to flash the firmware. Step 8: Plug in your ESP and flash the firmware. Step 9: Connect your power wires to a USB Type-A board. Step 10: Cut wires for IR LEDs. Step 11: Twist the positive USB wire and positive IR LED wires together and tin them. Step 12: Solder the positive wire to ESP. Step 13: Solder the negative wire to ESP . Step 14: Wire up the 2nd ESP. Step 15: Prepare to solder IR LED PCBs . Step 17: Solder resistors on PCB V2. Step 18: Wire up PCBs V2 . Step 17: Solder resistors on PCB V3. Step 18: Wire up PCBs V3 . Step 19: 3D print mounts. ",
    "url": "https://redhawk989.github.io/EyeTrackVR/full-build-guide/#this-page-will-contain-a-step-by-step-assembly-guide",
    "relUrl": "/full-build-guide/#this-page-will-contain-a-step-by-step-assembly-guide"
  },"46": {
    "doc": "Full Build Guide",
    "title": "Step 1: Make sure your have read the Things to know before you start guide.",
    "content": "This will give you a basic overview of the project’s status and what to expect currently. ",
    "url": "https://redhawk989.github.io/EyeTrackVR/full-build-guide/#step-1-make-sure-your-have-read-the-things-to-know-before-you-start-guide",
    "relUrl": "/full-build-guide/#step-1-make-sure-your-have-read-the-things-to-know-before-you-start-guide"
  },"47": {
    "doc": "Full Build Guide",
    "title": "Step 2: Order all the parts listed on our Parts list",
    "content": "Please take note of the fact that hardware still may change, although with more developments it seems like we are going to stick with current hardware. ",
    "url": "https://redhawk989.github.io/EyeTrackVR/full-build-guide/#step-2-order-all-the-parts-listed-on-our-parts-list",
    "relUrl": "/full-build-guide/#step-2-order-all-the-parts-listed-on-our-parts-list"
  },"48": {
    "doc": "Full Build Guide",
    "title": "Step 3: Wait for things to arrive.",
    "content": "Long shipping times from China are f u n. Please allow from 3 weeks to 2 months for everything to arrive. ",
    "url": "https://redhawk989.github.io/EyeTrackVR/full-build-guide/#step-3-wait-for-things-to-arrive",
    "relUrl": "/full-build-guide/#step-3-wait-for-things-to-arrive"
  },"49": {
    "doc": "Full Build Guide",
    "title": "Step 4: Gather up all of your hardware.",
    "content": "Make sure you have at least the following: . | 2 ESP 32 CAM boards | 2 160 degree cameras | 1 USB board to power your ESPs | 1 Programmer board (buying an extra is reccomended) | IR emitters, resistors, and preferably PCBs | Lower gauge wire to power ESPs (I use spare 24 AWG speaker wire) | Higher gauge wire to power IR LEDs | 3d printer to print mounts. (Buying them from some place like JLCPCB is also an option) | Glue of some form, hot glue highly recommended. | . ESPs, cams, a programmer and a USB connector ",
    "url": "https://redhawk989.github.io/EyeTrackVR/full-build-guide/#step-4-gather-up-all-of-your-hardware",
    "relUrl": "/full-build-guide/#step-4-gather-up-all-of-your-hardware"
  },"50": {
    "doc": "Full Build Guide",
    "title": "Step 5: Attach cameras to ESPs.",
    "content": "Look at your ESP and locate the camera ribbon cable connector as circled below. Flip the gray part up to allow the cameras to be connected. Do not force it, or shove objects into it to open, fingernails are fine. Now slide in a camera, please note that the pins are facing down, you should only see the black part. Once the camera has been slid in, press the gray part of the connector back down. There will be a small amount of force but still be gentle. Note the ammount of black coming out of the connector. ",
    "url": "https://redhawk989.github.io/EyeTrackVR/full-build-guide/#step-5-attach-cameras-to-esps",
    "relUrl": "/full-build-guide/#step-5-attach-cameras-to-esps"
  },"51": {
    "doc": "Full Build Guide",
    "title": "Step 6: Connect ESP to the programmer to flash.",
    "content": "Why flash before you have it assembled? It’s simple, to make sure they actually work before you spend time soldering to them. Slide your ESP into the programmer, and note the USB port goes away from the ESP’s camera. ",
    "url": "https://redhawk989.github.io/EyeTrackVR/full-build-guide/#step-6-connect-esp-to-the-programmer-to-flash",
    "relUrl": "/full-build-guide/#step-6-connect-esp-to-the-programmer-to-flash"
  },"52": {
    "doc": "Full Build Guide",
    "title": "Step 7: Configure Visual Studio Code and prepare to flash the firmware.",
    "content": "Check out our guide on Setting up VS Code . Once VS Code is set up, move on to the next step. ",
    "url": "https://redhawk989.github.io/EyeTrackVR/full-build-guide/#step-7-configure-visual-studio-code-and-prepare-to-flash-the-firmware",
    "relUrl": "/full-build-guide/#step-7-configure-visual-studio-code-and-prepare-to-flash-the-firmware"
  },"53": {
    "doc": "Full Build Guide",
    "title": "Step 8: Plug in your ESP and flash the firmware.",
    "content": "Our guide, Building and uploading the firmware manually has steps on how to do this. After it has flashed, make sure you get a video stream in your browser, then power it down and flash your next ESP. ",
    "url": "https://redhawk989.github.io/EyeTrackVR/full-build-guide/#step-8-plug-in-your-esp-and-flash-the-firmware",
    "relUrl": "/full-build-guide/#step-8-plug-in-your-esp-and-flash-the-firmware"
  },"54": {
    "doc": "Full Build Guide",
    "title": "Step 9: Connect your power wires to a USB Type-A board.",
    "content": ". Warning: Powering from the programmer board will not work correctly. It delivers a lower voltage which results in dim LEDs and video artifacts which can both mess up tracking. Get two pairs of wire, preferably two different colors, Cut them to length (56mm in my case) and twist together two for ground and two for 5V. Here I used speaker wire where the copper denotes positive and silver negative. Then, strip the wires to about 3mm of exposed wire. ",
    "url": "https://redhawk989.github.io/EyeTrackVR/full-build-guide/#step-9-connect-your-power-wires-to-a-usb-type-a-board",
    "relUrl": "/full-build-guide/#step-9-connect-your-power-wires-to-a-usb-type-a-board"
  },"55": {
    "doc": "Full Build Guide",
    "title": "Step 10: Cut wires for IR LEDs.",
    "content": "To find the optimal length, take a piece of wire and a marker and mock up your wire route, and mark the wire, cut it, then make another at the same size for the other eye. You will need 3 different cuts of wire. 2 short ones for connecting the 2 PCBs per eye together, 2 Longer ones for power, or ground and 2 slightly longer ones for power or ground for the LED near the camera at the bottom. Once cut, strip them to around 4mm of exposed wire. ",
    "url": "https://redhawk989.github.io/EyeTrackVR/full-build-guide/#step-10-cut-wires-for-ir-leds",
    "relUrl": "/full-build-guide/#step-10-cut-wires-for-ir-leds"
  },"56": {
    "doc": "Full Build Guide",
    "title": "Step 11: Twist the positive USB wire and positive IR LED wires together and tin them.",
    "content": "Once twisted together add solder to keep them together. This makes the connection much easier. ",
    "url": "https://redhawk989.github.io/EyeTrackVR/full-build-guide/#step-11-twist-the-positive-usb-wire-and-positive-ir-led-wires-together-and-tin-them",
    "relUrl": "/full-build-guide/#step-11-twist-the-positive-usb-wire-and-positive-ir-led-wires-together-and-tin-them"
  },"57": {
    "doc": "Full Build Guide",
    "title": "Step 12: Solder the positive wire to ESP.",
    "content": "Lay the wire on the outside of the 5V pin and apply solder. ",
    "url": "https://redhawk989.github.io/EyeTrackVR/full-build-guide/#step-12-solder-the-positive-wire-to-esp",
    "relUrl": "/full-build-guide/#step-12-solder-the-positive-wire-to-esp"
  },"58": {
    "doc": "Full Build Guide",
    "title": "Step 13: Solder the negative wire to ESP",
    "content": "Repeat Step 11 but with the negative wires. Note: As a user in our discord has learned, you can short the IO12 pin with the ground pin without issues. In the below example I put it on the top of the pin, It will be a week-ish joint but that’s where glue comes in handy. ",
    "url": "https://redhawk989.github.io/EyeTrackVR/full-build-guide/#step-13-solder-the-negative-wire-to-esp",
    "relUrl": "/full-build-guide/#step-13-solder-the-negative-wire-to-esp"
  },"59": {
    "doc": "Full Build Guide",
    "title": "Step 14: Wire up the 2nd ESP.",
    "content": "Repeat steps 12-14 with the 2nd ESP. ",
    "url": "https://redhawk989.github.io/EyeTrackVR/full-build-guide/#step-14-wire-up-the-2nd-esp",
    "relUrl": "/full-build-guide/#step-14-wire-up-the-2nd-esp"
  },"60": {
    "doc": "Full Build Guide",
    "title": "Step 15: Prepare to solder IR LED PCBs.",
    "content": "Get your magnifying glass out, it’s time to solder very smol things. Gather 4 PCBs, 4 IR LEDs, and either 4 ~350ohm, or 2 ~700ohm resistors. 357ohm resistors and V3 PCBs . 698ohm resistors and V2 PCBs . Here are the PCB pin-out labels: . V2 . V3 . LED labels: . The green markings and notched corners mark the positive sides of the LEDs pictured above. If you have different LEDs, please consult their datasheet. Some terminology related to them: . 5V: 5-volt power in. GND: Ground or power out. AR: After-Resistor this is to be used as the power in on the 2nd PCB in series as resistors are not needed on the 2nd PCB since they are on the 1st one. SNG: Single resistor, use this as 5V in if you are using only 1 ~700ohm resistor on V3 boards (not recommended). Negative: This marks the negative side of the LED. Positive: This marks the positive side of the LED. ",
    "url": "https://redhawk989.github.io/EyeTrackVR/full-build-guide/#step-15-prepare-to-solder-ir-led-pcbs",
    "relUrl": "/full-build-guide/#step-15-prepare-to-solder-ir-led-pcbs"
  },"61": {
    "doc": "Full Build Guide",
    "title": "Step 17: Solder resistors on PCB V2.",
    "content": "You only need 1 PCB to have a resistor per eye. Tin the resistor pads. Hold the resistor in place. Solder one end. Flip to the other side of the resistor and solder it. ",
    "url": "https://redhawk989.github.io/EyeTrackVR/full-build-guide/#step-17-solder-resistors-on-pcb-v2",
    "relUrl": "/full-build-guide/#step-17-solder-resistors-on-pcb-v2"
  },"62": {
    "doc": "Full Build Guide",
    "title": "Solder LEDs on PCB V2.",
    "content": "Tin the pads . Place the resistor on the pads in the correct orientation. Solder each side of the resistor. Be careful not to solder at too high of a temp, recommended soldering temp is 230C with a max of 245C. The LED is flipped in this Image, the green dot should face AWAY from the PCB. ",
    "url": "https://redhawk989.github.io/EyeTrackVR/full-build-guide/#solder-leds-on-pcb-v2",
    "relUrl": "/full-build-guide/#solder-leds-on-pcb-v2"
  },"63": {
    "doc": "Full Build Guide",
    "title": "Wire up the PCBs V2.",
    "content": "Basic full wiring diagram of IR PCBs V2 . The PCB that receives the 5V power is the one with the resistor. The second one, which gets its power from the ground pin of the first, does not have a resistor on it and its power input pin is the AR pin (After-Resistor). The 2nd PCBs ground pin goes to the ground of the system, in the diagram it is the ESPs ground pin. ",
    "url": "https://redhawk989.github.io/EyeTrackVR/full-build-guide/#wire-up-the-pcbs-v2",
    "relUrl": "/full-build-guide/#wire-up-the-pcbs-v2"
  },"64": {
    "doc": "Full Build Guide",
    "title": "Step 17: Solder resistors on PCB V3.",
    "content": "You only need 1 PCB to have resistors per eye. Tin the resistor pads. Note: in this example, I use too much solder, it should only be enough to lightly cover the pad. Next, grab a resistor and hold it on the pads. While holding the resistor add solder to your soldering iron and apply it to the resistor. I like to do this by having a piece of my solder stick up in the air and then put it on my iron that way. Flip the PCB and solder the other end. Now repeat for the other one. ",
    "url": "https://redhawk989.github.io/EyeTrackVR/full-build-guide/#step-17-solder-resistors-on-pcb-v3",
    "relUrl": "/full-build-guide/#step-17-solder-resistors-on-pcb-v3"
  },"65": {
    "doc": "Full Build Guide",
    "title": "Solder LEDs on PCB V3.",
    "content": "Tin the LED pads. Orientate the LED and hold it in place. Solder one end. Flip around and solder the other end. ",
    "url": "https://redhawk989.github.io/EyeTrackVR/full-build-guide/#solder-leds-on-pcb-v3",
    "relUrl": "/full-build-guide/#solder-leds-on-pcb-v3"
  },"66": {
    "doc": "Full Build Guide",
    "title": "Wire up the PCBs V3.",
    "content": "The PCB that receives the 5V power is the one with the resistor. The second one, which gets its power from the ground pin of the first, does not have a resistor on it and its power input pin is the AR pin (After-Resistor). The 2nd PCBs ground pin goes to the ground of the system, in the diagram it is the ESPs ground pin. ",
    "url": "https://redhawk989.github.io/EyeTrackVR/full-build-guide/#wire-up-the-pcbs-v3",
    "relUrl": "/full-build-guide/#wire-up-the-pcbs-v3"
  },"67": {
    "doc": "Full Build Guide",
    "title": "Step 19: 3D print mounts.",
    "content": "Head to the 3D printed parts section of the parts list here. Find which parts are for your headset and print them. Some may work better or worse, it is recommended to test all of them if there are multiple, print one of each kind. If none work, try making an edit yourself if you have the skills. If you have made a mount make sure to ping me, Prohurtz#0001, so I can add them to the list. Having trouble getting them to fit? Try resizing the mounts up, or down a little to ensure a good fit. There are 2 different types of mounts, how to secure the camera to each type will be documented below. Type 1 . This uses a method of sliding in the camera. Generally, this is the recommended mounting method as it generally requires no glue. Place the camera into the mount . Slowly apply pressure inwards until the camera snaps into place. Note: There is a good chance of breaking the mount when putting in the camera. If this happens you may be able to save the mount depending on where the break was. A small dab of hot glue around the camera is likely all that is needed. Type 2 . This uses the method of gluing the camera. Apply a bit of glue to the bottom of the camera mount . Place the camera on the mount. ",
    "url": "https://redhawk989.github.io/EyeTrackVR/full-build-guide/#step-19-3d-print-mounts",
    "relUrl": "/full-build-guide/#step-19-3d-print-mounts"
  },"68": {
    "doc": "Full Build Guide",
    "title": "IR LED mounting.",
    "content": "This again differs from mount to mount. In some cases, there are designated spots for the LEDs to go. In others there are no specified spots, you will have to mess around to find what works best. This image shows the optimal/near-optimal position for the LEDs. Hot glue is your friend with this. Tip: Use rubbing alcohol to easily remove hot glue. ",
    "url": "https://redhawk989.github.io/EyeTrackVR/full-build-guide/#ir-led-mounting",
    "relUrl": "/full-build-guide/#ir-led-mounting"
  },"69": {
    "doc": "Full Build Guide",
    "title": "Full Build Guide",
    "content": " ",
    "url": "https://redhawk989.github.io/EyeTrackVR/full-build-guide/",
    "relUrl": "/full-build-guide/"
  },"70": {
    "doc": "Getting Started",
    "title": "Want to build an EyeTrackVR kit? This is where to start.",
    "content": " ",
    "url": "https://redhawk989.github.io/EyeTrackVR/getting_started#want-to-build-an-eyetrackvr-kit-this-is-where-to-start",
    "relUrl": "/getting_started#want-to-build-an-eyetrackvr-kit-this-is-where-to-start"
  },"71": {
    "doc": "Getting Started",
    "title": "Getting Started",
    "content": " ",
    "url": "https://redhawk989.github.io/EyeTrackVR/getting_started",
    "relUrl": "/getting_started"
  },"72": {
    "doc": "Mount Maker's Guide",
    "title": "Welcome to the Mount Maker’s Guide To ETVR!",
    "content": "This page is dedicated to the making of mounts for the EyeTrackVR project! . If you here that means you have a headset that isnt currently supported by ETVR! To check if this is the case, please check out https://redhawk989.github.io/EyeTrackVR/partslist/#3d-printed-parts! . What is important in a mount? . | Camera Placement | IR emmiter placement | . ",
    "url": "https://redhawk989.github.io/EyeTrackVR/MMG/#welcome-to-the-mount-makers-guide-to-etvr",
    "relUrl": "/MMG/#welcome-to-the-mount-makers-guide-to-etvr"
  },"73": {
    "doc": "Mount Maker's Guide",
    "title": "Mount Maker's Guide",
    "content": " ",
    "url": "https://redhawk989.github.io/EyeTrackVR/MMG/",
    "relUrl": "/MMG/"
  },"74": {
    "doc": "Part List",
    "title": "This page will include a basic part list for building an EyeTrackVR setup",
    "content": ". Warning: Please note that no hardware has been fully set in stone, all purchases are at your loss if hardware changes . Note: It is recommended to source main parts from AliExpress as it is much cheaper. Note: It is good practice to buy more than needed in some cases, namely programmers and ESPs, this reduces the risk of a DOA (dead on arrival) causing a delay. ",
    "url": "https://redhawk989.github.io/EyeTrackVR/parts-list/#this-page-will-include-a-basic-part-list-for-building-an-eyetrackvr-setup",
    "relUrl": "/parts-list/#this-page-will-include-a-basic-part-list-for-building-an-eyetrackvr-setup"
  },"75": {
    "doc": "Part List",
    "title": "Camera setup",
    "content": ". | 2x ESP-CAM-32 modules AliExpress here . | 2x ov2640 160° fov IR / Night vers 75mm (850nm) AliExpress here . | 1x ESP-CAM programmer/ MB AliExpress here . | . Here is an amazon link for 3 ESP32-Cams and programmers without the proper cameras here . | 1x USB type-A male port to power both ESPs | . Bare breakout on AliExpress here . Or one with a cover on AliExpress here . | 1x Lower gauge wire to power ESPs 28 gauge wire from AliExpress here | . ",
    "url": "https://redhawk989.github.io/EyeTrackVR/parts-list/#camera-setup",
    "relUrl": "/parts-list/#camera-setup"
  },"76": {
    "doc": "Part List",
    "title": "IR Emitters",
    "content": ". | 4x Unfocused SMD IR emitters Recomended ones from LCSC here. Alternative ones from Digikey here. The difference between them is the ones from LCSC are rated for lower power, which means in the event of a short or mishap they should be safer, hence why they are recommended. | . Note: The smaller ones can not be soldered at temps above 245C or they will burn. Low temp solder is recommended . Warning: (DO NOT BUY FOCUSED ONES! If they look like something you would find in a TV remote do not use them, if you aren't exactly sure what you are doing, buy them from the LCSC or Digikey link) . | 4x IR emitter PCBs (highly recommended) . | 2x 698-710ohm resistors or the more recommend way, 4x 350ohm 1206 SMD resistors for IR emitters (If you are not using PCBs for the emitters then buying regular through-hole resistors is acceptable) . | 357 ohm from Digikey here . | . or . | 698 ohm from LCSC here | . I have a kit with the resistors, IR LEDs, and PCBs on Tindie here. This ensures you get the correct IR emitter parts. | 1x Wire to power IR emitters 32 gauge wire from AliExpress here | . ",
    "url": "https://redhawk989.github.io/EyeTrackVR/parts-list/#ir-emitters",
    "relUrl": "/parts-list/#ir-emitters"
  },"77": {
    "doc": "Part List",
    "title": "Other parts",
    "content": ". | 1x Hot glue or another form of glue . | 1x Soldering iron and solder (lead-free solder highly recommended) . | . ",
    "url": "https://redhawk989.github.io/EyeTrackVR/parts-list/#other-parts",
    "relUrl": "/parts-list/#other-parts"
  },"78": {
    "doc": "Part List",
    "title": "3d Printed Parts For Supported Headsets",
    "content": ". ",
    "url": "https://redhawk989.github.io/EyeTrackVR/parts-list/",
    "relUrl": "/parts-list/"
  },"79": {
    "doc": "Part List",
    "title": "\n                    Quest 2\n                ",
    "content": ". Camera and IR emitter mount by Arkfall . Camera and IR emitter mount by Prohurtz . ESP mount by Arkfall . ESP mount by Prohurtz . | . ",
    "url": "https://redhawk989.github.io/EyeTrackVR/parts-list/",
    "relUrl": "/parts-list/"
  },"80": {
    "doc": "Part List",
    "title": "\n                    Valve Index\n                ",
    "content": ". Camera and IR emitter mount by Qdot . Camera mount by Razgriz . | ESP mount : N/A | . ",
    "url": "https://redhawk989.github.io/EyeTrackVR/parts-list/",
    "relUrl": "/parts-list/"
  },"81": {
    "doc": "Part List",
    "title": "\n                    Samsung Odyssey +\n                ",
    "content": ". Camera and IR emitter mount by Breakdown . | ESP mount : N/A | . ",
    "url": "https://redhawk989.github.io/EyeTrackVR/parts-list/",
    "relUrl": "/parts-list/"
  },"82": {
    "doc": "Part List",
    "title": "\n                    Quest 1\n                ",
    "content": ". Camera and IR emitter mount by G0LDJAY . | . Other Headsets . If you own another headset not listed above, that means there are no mounts designed for them yet. If you have basic skills in modeling or think up a solution to mount cams and emitters, please try to make a mount and then let us in the discord know so it can be added here. Any headset that can fit the camera is potentially compatible. If you are willing, give it a shot to design a mount for the rest of the community. Tip: If you have a headset that is not listed above, please let us know in the discord so it can be added here . ",
    "url": "https://redhawk989.github.io/EyeTrackVR/parts-list/",
    "relUrl": "/parts-list/"
  },"83": {
    "doc": "Part List",
    "title": "Part List",
    "content": " ",
    "url": "https://redhawk989.github.io/EyeTrackVR/parts-list/",
    "relUrl": "/parts-list/"
  },"84": {
    "doc": "Privacy Policy",
    "title": "Privacy Policy",
    "content": "The privacy of my visitors is extremely important. This Privacy Policy outlines the types of personal information that is received and collected and how it is used. ",
    "url": "https://redhawk989.github.io/EyeTrackVR/privacy/",
    "relUrl": "/privacy/"
  },"85": {
    "doc": "Privacy Policy",
    "title": "Designation of the responsible authority",
    "content": "The persons responsible for data processing on this website are: . RedHawk989 &amp; ZanzyTHEbar . The responsible body(s) decides alone or jointly with others on the purposes and means of processing personal data (e.g. names, contact details, etc.). ",
    "url": "https://redhawk989.github.io/EyeTrackVR/privacy/#designation-of-the-responsible-authority",
    "relUrl": "/privacy/#designation-of-the-responsible-authority"
  },"86": {
    "doc": "Privacy Policy",
    "title": "Log Files",
    "content": "Like many other websites, this site uses log files to help learn about when, from where, and how often traffic flows to this site. The information in these log files include: . | Internet Protocol addresses (IP) | Types of browser | Internet Service Provider (ISP) | Date and time stamp | Referring and exit pages | Number of clicks | . All of this information is not linked to anything that is personally identifiable. ",
    "url": "https://redhawk989.github.io/EyeTrackVR/privacy/#log-files",
    "relUrl": "/privacy/#log-files"
  },"87": {
    "doc": "Privacy Policy",
    "title": "Cookies and Web Beacons",
    "content": "I use cookies on this site to store limited information about how you interact with the site. In line with EU legislation, I have identified several different types of cookies: . | Strictly necessary cookies. | I set a cookie to store your acceptance of my cookie policy. This expires after 31 days. | . | Preferences cookies to remember your preferences. These are not used on this website. | Statistics cookies that allow me to see how my audience uses the website. I use: . | Google Analytics | . | Marketing cookies to help advertisers deliver relevant content are not used on this website. | . ",
    "url": "https://redhawk989.github.io/EyeTrackVR/privacy/#cookies-and-web-beacons",
    "relUrl": "/privacy/#cookies-and-web-beacons"
  },"88": {
    "doc": "Privacy Policy",
    "title": "Google Analytics",
    "content": "Google Analytics is a web analytics tool I use to help understand how visitors engage with this website. It reports website trends using cookies and web beacons without identifying individual visitors. Individual IP addresses are anonymized. You can read Google Analytics Privacy Policy. Objection to data collection . You can prevent the collection of your data by Google Analytics by clicking on the following link https://tools.google.com/dlpage/gaoptout. An opt-out cookie is set to prevent the collection of your information on future visits to our site: Disable Google Analytics. Details on how Google Analytics handles user data can be found in the Google privacy policy: https://support.google.com/analytics/answer/6004245. Demographic characteristics at Google Analytics . This website uses the function “demographic characteristics” of Google Analytics. It can be used to generate reports that contain information about the age, gender and interests of visitors to the site. This data comes from interest-based advertising by Google as well as from visitor data from third parties. It is not possible to assign the data to a specific person. You can deactivate this function at any time. You can do this through the ad settings in your Google Account or by generally prohibiting the collection of your data by Google Analytics, as explained in the section “Opting out of data collection”. ",
    "url": "https://redhawk989.github.io/EyeTrackVR/privacy/#google-analytics",
    "relUrl": "/privacy/#google-analytics"
  },"89": {
    "doc": "Privacy Policy",
    "title": "Google Web Fonts",
    "content": "This website uses Web Fonts from Google. The provider is Google Inc, 1600 Amphitheater Parkway, Mountain View, CA 94043, USA. The use of Google Fonts allows me to present this website using my choice of fonts, regardless of the fonts that are installed locally. This is done by retrieving the Google Web Fonts from a Google server in the USA and the associated transfer of your data to Google. This data is your IP address and which page you have visited on this website. The use of Google Web Fonts is based on Art. 6 para. 1 lit. f DSGVO. As the operator of this website, I have a legitimate interest in the optimal display and transmission of my web presence. The company Google is certified for the US-European data protection convention “Privacy Shield”. This data protection agreement is intended to ensure compliance with the level of data protection applicable in the EU. Details about Google Web Fonts can be found here: https://www.google.com/fonts#AboutPlace:about and further information in the Google Privacy Policy: https://policies.google.com/privacy/partners. ",
    "url": "https://redhawk989.github.io/EyeTrackVR/privacy/#google-web-fonts",
    "relUrl": "/privacy/#google-web-fonts"
  },"90": {
    "doc": "Setup Visual Studio Code environment",
    "title": "Setting up the environment",
    "content": "This procedure will show how to prepare your system for uploading the firmware to your tracker. ",
    "url": "https://redhawk989.github.io/EyeTrackVR/setting-up-firmware-enviroment/#setting-up-the-environment",
    "relUrl": "/setting-up-firmware-enviroment/#setting-up-the-environment"
  },"91": {
    "doc": "Setup Visual Studio Code environment",
    "title": "1. Install Visual Studio Code",
    "content": "Download the latest Visual Studio Code and install it. Download . Install . ",
    "url": "https://redhawk989.github.io/EyeTrackVR/setting-up-firmware-enviroment/#1-install-visual-studio-code",
    "relUrl": "/setting-up-firmware-enviroment/#1-install-visual-studio-code"
  },"92": {
    "doc": "Setup Visual Studio Code environment",
    "title": "2. Install PlatformIO IDE",
    "content": "Once Visual Studio Code is installed, open it and install PlatformIO IDE for VSCode, an extension that will allow you to connect to the tracker, build and upload the firmware. ",
    "url": "https://redhawk989.github.io/EyeTrackVR/setting-up-firmware-enviroment/#2-install-platformio-ide",
    "relUrl": "/setting-up-firmware-enviroment/#2-install-platformio-ide"
  },"93": {
    "doc": "Setup Visual Studio Code environment",
    "title": "3. Clone the firmware project",
    "content": "Make sure you close any current projects you have open or open a new window before moving forward with these steps. | Go to https://github.com/lorow/OpenIris and download the latest version of the code. | Extract the zip, take note of the path it is in for when we open it in Platform IO. | Open the firmware in VS Code by going to PlatformIO, selecting open, then navigating to OpenIris ESP folder and opening it. | . This is a direct adaptation from SlimeVR. Credit goes to the SlimeVR team adapted from here . ",
    "url": "https://redhawk989.github.io/EyeTrackVR/setting-up-firmware-enviroment/#3-clone-the-firmware-project",
    "relUrl": "/setting-up-firmware-enviroment/#3-clone-the-firmware-project"
  },"94": {
    "doc": "Setup Visual Studio Code environment",
    "title": "Setup Visual Studio Code environment",
    "content": " ",
    "url": "https://redhawk989.github.io/EyeTrackVR/setting-up-firmware-enviroment/",
    "relUrl": "/setting-up-firmware-enviroment/"
  },"95": {
    "doc": "Software Guide",
    "title": "How to install, setup, and build from source the EyeTrackApp.",
    "content": " ",
    "url": "https://redhawk989.github.io/EyeTrackVR/software-guide/#how-to-install-setup-and-build-from-source-the-eyetrackapp",
    "relUrl": "/software-guide/#how-to-install-setup-and-build-from-source-the-eyetrackapp"
  },"96": {
    "doc": "Software Guide",
    "title": "Software Guide",
    "content": " ",
    "url": "https://redhawk989.github.io/EyeTrackVR/software-guide/",
    "relUrl": "/software-guide/"
  },"97": {
    "doc": "Community Outreach",
    "title": "",
    "content": ". Coming Soon . ",
    "url": "https://redhawk989.github.io/EyeTrackVR/suggestions.html",
    "relUrl": "/suggestions.html"
  },"98": {
    "doc": "Community Outreach",
    "title": "Community Outreach",
    "content": "| ",
    "url": "https://redhawk989.github.io/EyeTrackVR/suggestions.html",
    "relUrl": "/suggestions.html"
  },"99": {
    "doc": "Things to know before you start",
    "title": "This page will be an overview of things to know and understand before you start this project.",
    "content": "Software is not final. Bugs can and will occur which may hinder the experience or useability at times. Do not expect 100% reliable and perfect function. Firmware may have user difficulties. Our firmware has not been tested widely so issues may creep up. IR emitters are dangerous. If handled wrong or precautions are ignored you can and will cause damage to your eyes. Please make sure to only buy linked ones or ones with specs that match exactly. We will not be responsible for damaged caused if you go your own route. Documentation may be incomplete. Important steps may be missing. You will need to set up your avatar to use this. This will require some basic Unity knowledge and owning your own avatar. Once you have acknowledged the items above, move on to the Full Build Guide . ",
    "url": "https://redhawk989.github.io/EyeTrackVR/things-to-know#this-page-will-be-an-overview-of-things-to-know-and-understand-before-you-start-this-project",
    "relUrl": "/things-to-know#this-page-will-be-an-overview-of-things-to-know-and-understand-before-you-start-this-project"
  },"100": {
    "doc": "Things to know before you start",
    "title": "Things to know before you start",
    "content": " ",
    "url": "https://redhawk989.github.io/EyeTrackVR/things-to-know",
    "relUrl": "/things-to-know"
  },"101": {
    "doc": "Building and uploading the firmware manually",
    "title": "Building and uploading the firmware manually",
    "content": "Uploading your firmware must initially be done over cable. Once you have the tracker connected to your WiFi after your first firmware update, you can opt to use OTA in the future. ",
    "url": "https://redhawk989.github.io/EyeTrackVR/building-and-flashing-firmware-manually/",
    "relUrl": "/building-and-flashing-firmware-manually/"
  },"102": {
    "doc": "Building and uploading the firmware manually",
    "title": "1. Connect your tracker to your PC via the programmer.",
    "content": "First, connect your ESP32-Cam to your programmer. In the case of the ESP32-Cam-MB board, it’s as simple as sticking it into the socket the way it came in the package and then connecting it to your PC with a micro-USB cable. In some cases, there is a button labeled IOO on the programmer. If that button exists make sure to hold it in while you plug the programmer into your pc, once plugged in you can release the button. In the case of an FTDI programmer, the steps aren’t as easy, so grab this guide for how to set it up. ",
    "url": "https://redhawk989.github.io/EyeTrackVR/building-and-flashing-firmware-manually/#1-connect-your-tracker-to-your-pc-via-the-programmer",
    "relUrl": "/building-and-flashing-firmware-manually/#1-connect-your-tracker-to-your-pc-via-the-programmer"
  },"103": {
    "doc": "Building and uploading the firmware manually",
    "title": "2. Build your firmware",
    "content": ". | Press the build button at the bottom of Visual Studio Code. | . ",
    "url": "https://redhawk989.github.io/EyeTrackVR/building-and-flashing-firmware-manually/#2-build-your-firmware",
    "relUrl": "/building-and-flashing-firmware-manually/#2-build-your-firmware"
  },"104": {
    "doc": "Building and uploading the firmware manually",
    "title": "3. Upload your firmware",
    "content": ". | If you are using the OTA method, first make sure the tracker you wish to flash is turned on. | Once the firmware has been built, press the upload button to upload the firmware. | . Note: The MB board does the resetting for you, so if you're using the FTDI programmer, follow the guide linked above (the one from randomnerdtutorials) . | If the upload is successful, you should get an output that looks like this: . | . Congratulations! You have now successfully uploaded the firmware to your EyeTrackVR Tracker! . If you have trouble with uploading your firmware over cable check the following: . | Make sure your USB cable from the tracker is plugged firmly into your PC. | Make sure that your USB cable is a data and charging cable (it is suggested you try other cables or devices with the cable). | Make sure that your drivers are up-to-date. | Some ports might not work, try other ones. | . Additionally, this can be caused by software hogging COM ports (VSCode and Cura can be the cause of this). ",
    "url": "https://redhawk989.github.io/EyeTrackVR/building-and-flashing-firmware-manually/#3-upload-your-firmware",
    "relUrl": "/building-and-flashing-firmware-manually/#3-upload-your-firmware"
  },"105": {
    "doc": "Building and uploading the firmware manually",
    "title": "Uploading via OTA",
    "content": "Once you have successfully connected your trackers to your WiFi, you can use OTA to handle all future firmware updates. | Retrieve the IP of the tracker you wish to flash. The IP can be found through network monitoring applications, or by viewing tracker output in a serial monitor. | In platformio.ini file uncomment the following lines in Visual Studio Code by removing the ;: | . ;upload_protocol = espota ;upload_port = 192.168.1.49 . | Change the value of upload_port to the IP address retrieved during the first step. | Turn the tracker you wish to flash off and then on again. | Wait around 5 seconds. | Press the upload button to upload the firmware. | Repeat for as many trackers as you need. | . ",
    "url": "https://redhawk989.github.io/EyeTrackVR/building-and-flashing-firmware-manually/#uploading-via-ota",
    "relUrl": "/building-and-flashing-firmware-manually/#uploading-via-ota"
  },"106": {
    "doc": "Building and uploading the firmware manually",
    "title": "Finding the IP address of your tracker",
    "content": "Connect your tracker to your PC and then open a serial monitor in VSC by pressing the “plug” icon. Now, press the restart button on the esp itself. watch the monitor for output like this: . The text, highlighted in green for demonstration, is the stream address of the camera. Take note of this for input into the software. ",
    "url": "https://redhawk989.github.io/EyeTrackVR/building-and-flashing-firmware-manually/#finding-the-ip-address-of-your-tracker",
    "relUrl": "/building-and-flashing-firmware-manually/#finding-the-ip-address-of-your-tracker"
  },"107": {
    "doc": "Building and uploading the firmware manually",
    "title": "Troubleshooting",
    "content": "If you encountered an issue while following these steps check the FAQ. If you don’t find an answer to your question there ask in #questions channel in the discord, we will be happy to help. Adapted from the SlimeVR docs, Credit goes to the SlimeVR team here . ",
    "url": "https://redhawk989.github.io/EyeTrackVR/building-and-flashing-firmware-manually/#troubleshooting",
    "relUrl": "/building-and-flashing-firmware-manually/#troubleshooting"
  },"108": {
    "doc": "VR Chat Avatar Setup",
    "title": "How to set up your avatar for eye tracking:",
    "content": "Currently, the best resource is the VRC Face Tracking GitHub and Discord. I hope to have a good video available from a community member that shows and explains the process eventually. Note: We currently only support float parameters, please adjust your setup accordingly . ",
    "url": "https://redhawk989.github.io/EyeTrackVR/vrc-avatar-setup/#how-to-set-up-your-avatar-for-eye-tracking",
    "relUrl": "/vrc-avatar-setup/#how-to-set-up-your-avatar-for-eye-tracking"
  },"109": {
    "doc": "VR Chat Avatar Setup",
    "title": "VR Chat Avatar Setup",
    "content": " ",
    "url": "https://redhawk989.github.io/EyeTrackVR/vrc-avatar-setup/",
    "relUrl": "/vrc-avatar-setup/"
  }
}

